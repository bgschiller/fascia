{
  "name": "fascia",
  "version": "0.0.1-alpha-7",
  "description": "A pattern I find really useful in web apps is to separate out authentication, authorization, and the action. In node/express, these end up as middlewares:",
  "main": "dist/index.js",
  "umd:main": "dist/fascia.umd.production.js",
  "module": "dist/fascia.es.production.js",
  "types": "dist/src/index.d.ts",
  "scripts": {
    "build": "rollup -c rollup.config.ts",
    "test": "jest",
    "test:debug": "node --inspect-brk node_modules/.bin/jest --runInBand"
  },
  "author": "",
  "license": "MIT",
  "peerDependencies": {
    "express": "*"
  },
  "dependencies": {
    "empty-promise": "^1.2.0",
    "io-ts": "^1.0.0",
    "io-ts-promise": "^1.0.0",
    "knex": "*",
    "node-mocks-http": "^1.7.5"
  },
  "devDependencies": {
    "@types/express": "^4.17.2",
    "@types/jest": "^24.9.0",
    "@types/node": "^13.1.8",
    "@types/passport": "^1.0.2",
    "@types/slonik": "^21.4.0",
    "jest": "^24.8.0",
    "prettier": "^1.18.2",
    "rollup": "^1.15.0",
    "rollup-plugin-commonjs": "^10.0.0",
    "rollup-plugin-node-resolve": "^5.0.1",
    "rollup-plugin-sourcemaps": "^0.4.2",
    "rollup-plugin-typescript2": "^0.21.1",
    "ts-jest": "^24.0.2",
    "type-fest": "^0.4.1",
    "typescript": "^3.4.5"
  }
}
